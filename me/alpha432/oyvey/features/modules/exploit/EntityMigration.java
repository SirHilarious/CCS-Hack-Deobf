//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Program Files\Minecraft Deobfuscator\Mappings\1.12.2"!

//Decompiled by Procyon!

package me.alpha432.oyvey.features.modules.exploit;

import me.alpha432.oyvey.features.modules.*;
import net.minecraft.entity.*;
import me.alpha432.oyvey.features.command.*;
import net.minecraftforge.fml.common.eventhandler.*;
import me.alpha432.oyvey.event.events.*;
import net.minecraft.client.gui.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;

public class EntityMigration extends Module
{
    private Entity entity;
    
    public EntityMigration() {
        super("EntityMigration", "Migrates entities automatically", Category.EXPLOIT, true, false, false);
    }
    
    @Override
    public void onEnable() {
        this.entity = null;
    }
    
    private void c() {
        if (EntityMigration.mc.player.getRidingEntity() != null) {
            this.entity = EntityMigration.mc.player.getRidingEntity();
            EntityMigration.mc.player.dismountRidingEntity();
            EntityMigration.mc.world.removeEntity(this.entity);
        }
    }
    
    private void e() {
        if (this.entity == null) {
            Command.sendMessage("You didnt dismount an entity");
            return;
        }
        this.entity.isDead = false;
        EntityMigration.mc.world.spawnEntity(this.entity);
        EntityMigration.mc.player.startRiding(this.entity);
        Command.sendMessage("Remounted Entity");
    }
    
    @SubscribeEvent
    public void onMove(final MoveEvent event) {
        event.setCanceled(EntityMigration.mc.player.noClip = true);
    }
    
    @SubscribeEvent
    public void onUpdateWalkingPlayer(final UpdateWalkingPlayerEvent event) {
        if (EntityMigration.mc.player == null || EntityMigration.mc.world == null || this.entity == null) {
            this.disable();
            return;
        }
        if (EntityMigration.mc.currentScreen instanceof GuiDownloadTerrain) {
            EntityMigration.mc.currentScreen = null;
            return;
        }
        if (event.getStage() == 1) {
            return;
        }
        EntityMigration.mc.player.motionY = 0.0;
        this.entity.motionY = 0.0;
        EntityMigration.mc.getConnection().sendPacket((Packet)new CPacketVehicleMove(this.entity));
    }
}
