//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Program Files\Minecraft Deobfuscator\Mappings\1.12.2"!

//Decompiled by Procyon!

package me.alpha432.oyvey.features.modules.exploit;

import me.alpha432.oyvey.features.modules.*;
import net.minecraft.entity.player.*;
import net.minecraft.item.*;
import me.alpha432.oyvey.features.command.*;
import net.minecraft.util.*;
import java.util.*;
import net.minecraft.nbt.*;
import io.netty.buffer.*;
import net.minecraft.network.play.client.*;
import net.minecraft.network.*;

public class ChatReset extends Module
{
    public ChatReset() {
        super("ChatReset", "Does stuff", Category.EXPLOIT, true, false, false);
    }
    
    @Override
    public void onEnable() {
        int slot = -1;
        ItemStack selected = null;
        for (int i = 0; i < InventoryPlayer.getHotbarSize(); ++i) {
            final ItemStack stack = ChatReset.mc.player.inventory.getStackInSlot(i);
            if (stack != null && !stack.equals(ItemStack.EMPTY) && stack.getItem() instanceof ItemWritableBook) {
                slot = i;
                selected = stack;
                break;
            }
        }
        if (slot == -1) {
            Command.sendMessage("No Book");
            return;
        }
        final ItemStack item = selected;
        ChatReset.mc.addScheduledTask(() -> ChatReset.mc.player.openBook(item, EnumHand.MAIN_HAND));
        ChatReset.mc.addScheduledTask(() -> this.sendBook(item));
        this.disable();
    }
    
    private void sendBook(final ItemStack stack) {
        final NBTTagList pages = new NBTTagList();
        int page = 0;
        final Scanner parser = new Scanner("lol").useDelimiter(":PAGE:");
        for (int i = 0; i < 50 && parser.hasNext(); ++i) {
            pages.appendTag((NBTBase)new NBTTagString(parser.next().trim()));
            ++page;
        }
        if (stack.hasTagCompound()) {
            stack.getTagCompound().setTag("pages", (NBTBase)pages);
        }
        else {
            stack.setTagInfo("pages", (NBTBase)pages);
        }
        final String newLine = "\u23d0 \\u000d \n \r \r\n a";
        newLine.replace('\r', '\n').replace('\t', ' ').replace("\u0000", "");
        stack.setTagInfo("author", (NBTBase)new NBTTagString(ChatReset.mc.player.getName()));
        stack.setTagInfo("title", (NBTBase)new NBTTagString(newLine));
        final PacketBuffer buff = new PacketBuffer(Unpooled.buffer());
        buff.writeItemStack(stack);
        ChatReset.mc.getConnection().sendPacket((Packet)new CPacketCustomPayload("MC|BSign", buff));
    }
}
